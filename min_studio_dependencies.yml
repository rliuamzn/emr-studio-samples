# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  VPC:
    Type: "String"

Resources:

  # IAM resources
  EMRStudioServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticmapreduce.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: "Service role for EMR Studio"
      RoleName: EMRStudio_Service_Role

  EMRStudioServiceRolePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Roles:
      - Ref: "EMRStudioServiceRole"
      ManagedPolicyName: EMRStudioServiceRolePolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Resource: "*"
          Action:
          - "ec2:AuthorizeSecurityGroupEgress"
          - "ec2:AuthorizeSecurityGroupIngress"
          - "ec2:CreateSecurityGroup"
          - "ec2:DescribeSecurityGroups"
          - "ec2:RevokeSecurityGroupEgress"
          - "ec2:CreateNetworkInterface"
          - "ec2:CreateNetworkInterfacePermission"
          - "ec2:DeleteNetworkInterface"
          - "ec2:DeleteNetworkInterfacePermission"
          - "ec2:DescribeNetworkInterfaces"
          - "ec2:ModifyNetworkInterfaceAttribute"
          - "ec2:DescribeTags"
          - "ec2:DescribeInstances"
          - "ec2:DescribeSubnets"
          - "ec2:DescribeVpcs"
          - "elasticmapreduce:ListInstances"
          - "elasticmapreduce:DescribeCluster"
          - "elasticmapreduce:ListSteps"
        - Effect: Allow
          Resource: "arn:aws:ec2:*:*:network-interface/*"
          Action:
          - "ec2:CreateTags"
          Condition:
            ForAllValues:StringEquals:
              aws:TagKeys:
                - aws:elasticmapreduce:editor-id
                - aws:elasticmapreduce:job-flow-id
        - Effect: Allow
          Resource: "arn:aws:s3:::*"
          Action:
          - "s3:PutObject"
          - "s3:GetObject"
          - "s3:GetEncryptionConfiguration"
          - "s3:ListBucket"
          - "s3:DeleteObject"
        - Effect: Allow
          Resource: "arn:aws:secretsmanager:*:*:secret:*"
          Action:
          - "secretsmanager:GetSecretValue"

  EMRStudioUserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EMRStudio_User_Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticmapreduce.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: "User role for EMR Studio"

  EMRStudioBasicUserPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Roles:
      - Ref: "EMRStudioUserRole"
      ManagedPolicyName: EMRStudio_Basic_User_Policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Sid: AllowBasicActions
          Effect: Allow
          Resource: "*"
          Action:
          - "elasticmapreduce:CreateEditor"
          - "elasticmapreduce:DescribeEditor"  
          - "elasticmapreduce:ListEditors"  
          - "elasticmapreduce:StartEditor"  
          - "elasticmapreduce:StopEditor"  
          - "elasticmapreduce:DeleteEditor"  
          - "elasticmapreduce:OpenEditorInConsole"  
          - "elasticmapreduce:AttachEditor"  
          - "elasticmapreduce:DetachEditor"  
          - "elasticmapreduce:CreateRepository"  
          - "elasticmapreduce:DescribeRepository"  
          - "elasticmapreduce:DeleteRepository"  
          - "elasticmapreduce:ListRepositories"  
          - "elasticmapreduce:LinkRepository"  
          - "elasticmapreduce:UnlinkRepository"  
          - "elasticmapreduce:DescribeCluster"  
          - "elasticmapreduce:ListInstanceGroups"  
          - "elasticmapreduce:ListBootstrapActions"  
          - "elasticmapreduce:ListClusters"  
          - "elasticmapreduce:ListSteps"  
          - "elasticmapreduce:CreatePersistentAppUI"  
          - "elasticmapreduce:DescribePersistentAppUI"  
          - "elasticmapreduce:GetPersistentAppUIPresignedURL"  
          - "secretsmanager:CreateSecret"  
          - "secretsmanager:ListSecrets"
          - "emr-containers:DescribeVirtualCluster"
          - "emr-containers:ListVirtualClusters"
          - "emr-containers:DescribeManagedEndpoint"
          - "emr-containers:ListManagedEndpoints"
          - "emr-containers:CreateAccessTokenForManagedEndpoint"
          - "emr-containers:DescribeJobRun"
          - "emr-containers:ListJobRuns"
        - Sid: PassRolePermission
          Effect: Allow
          Resource: 
          - !GetAtt EMRStudioServiceRole.Arn
          Action: "iam:PassRole"  
        - Sid: S3ListPermission
          Effect: Allow
          Resource: "arn:aws:s3:::*"
          Action:
          - "s3:ListAllMyBuckets"  
          - "s3:ListBucket"  
          - "s3:GetBucketLocation"
        - Sid: S3GetObjectPermission
          Effect: Allow
          Resource: 
          - !Sub 'arn:aws:s3:::<my-bucket>/*'
          - !Sub 'arn:aws:s3:::aws-logs-${AWS::AccountId}-${AWS::Region}/elasticmapreduce/*'
          Action:
          - "s3:GetObject"  
          

  EMRStudioIntermediateUserPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Roles:
      - Ref: "EMRStudioUserRole"
      ManagedPolicyName: EMRStudio_Intermediate_User_Policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Sid: AllowBasicActions
          Effect: Allow
          Resource: "*"
          Action:
          - "elasticmapreduce:CreateEditor"
          - "elasticmapreduce:DescribeEditor"  
          - "elasticmapreduce:ListEditors"  
          - "elasticmapreduce:StartEditor"  
          - "elasticmapreduce:StopEditor"  
          - "elasticmapreduce:DeleteEditor"  
          - "elasticmapreduce:OpenEditorInConsole"  
          - "elasticmapreduce:AttachEditor"  
          - "elasticmapreduce:DetachEditor"  
          - "elasticmapreduce:CreateRepository"  
          - "elasticmapreduce:DescribeRepository"  
          - "elasticmapreduce:DeleteRepository"  
          - "elasticmapreduce:ListRepositories"  
          - "elasticmapreduce:LinkRepository"  
          - "elasticmapreduce:UnlinkRepository"  
          - "elasticmapreduce:DescribeCluster"  
          - "elasticmapreduce:ListInstanceGroups"  
          - "elasticmapreduce:ListBootstrapActions"  
          - "elasticmapreduce:ListClusters"  
          - "elasticmapreduce:ListSteps"  
          - "elasticmapreduce:CreatePersistentAppUI"  
          - "elasticmapreduce:DescribePersistentAppUI"  
          - "elasticmapreduce:GetPersistentAppUIPresignedURL"  
          - "secretsmanager:CreateSecret"  
          - "secretsmanager:ListSecrets"
          - "emr-containers:DescribeVirtualCluster"
          - "emr-containers:ListVirtualClusters"
          - "emr-containers:DescribeManagedEndpoint"
          - "emr-containers:ListManagedEndpoints"
          - "emr-containers:CreateAccessTokenForManagedEndpoint"
          - "emr-containers:DescribeJobRun"
          - "emr-containers:ListJobRuns"
        - Sid: AllowIntermediateActions
          Effect: Allow
          Resource: "*"
          Action:
          - "servicecatalog:DescribeProduct"
          - "servicecatalog:DescribeProductView"
          - "servicecatalog:ListLaunchPaths"
          - "servicecatalog:DescribeProvisioningParameters"
          - "servicecatalog:ProvisionProduct"
          - "servicecatalog:SearchProducts"
          - "servicecatalog:UpdateProvisionedProduct"
          - "servicecatalog:ListProvisioningArtifacts"
          - "servicecatalog:DescribeRecord"
          - "cloudformation:DescribeStackResources"
        - Sid: PassRolePermission
          Effect: Allow
          Resource: 
          - !GetAtt EMRStudioServiceRole.Arn
          Action: "iam:PassRole"  
        - Sid: S3ListPermission
          Effect: Allow
          Resource: "arn:aws:s3:::*"
          Action:
          - "s3:ListAllMyBuckets"  
          - "s3:ListBucket"  
          - "s3:GetBucketLocation"
        - Sid: S3GetObjectPermission
          Effect: Allow
          Resource: 
          - !Sub 'arn:aws:s3:::<my-bucket>/*'
          - !Sub 'arn:aws:s3:::aws-logs-${AWS::AccountId}-${AWS::Region}/elasticmapreduce/*'
          Action:
          - "s3:GetObject"

  EMRStudioAdvancedUserPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Roles:
      - Ref: "EMRStudioUserRole"
      ManagedPolicyName: EMRStudio_Advanced_User_Policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Sid: AllowBasicActions
          Effect: Allow
          Resource: "*"
          Action:
          - "elasticmapreduce:CreateEditor"
          - "elasticmapreduce:DescribeEditor"  
          - "elasticmapreduce:ListEditors"  
          - "elasticmapreduce:StartEditor"  
          - "elasticmapreduce:StopEditor"  
          - "elasticmapreduce:DeleteEditor"  
          - "elasticmapreduce:OpenEditorInConsole"  
          - "elasticmapreduce:AttachEditor"  
          - "elasticmapreduce:DetachEditor"  
          - "elasticmapreduce:CreateRepository"  
          - "elasticmapreduce:DescribeRepository"  
          - "elasticmapreduce:DeleteRepository"  
          - "elasticmapreduce:ListRepositories"  
          - "elasticmapreduce:LinkRepository"  
          - "elasticmapreduce:UnlinkRepository"  
          - "elasticmapreduce:DescribeCluster"  
          - "elasticmapreduce:ListInstanceGroups"  
          - "elasticmapreduce:ListBootstrapActions"  
          - "elasticmapreduce:ListClusters"  
          - "elasticmapreduce:ListSteps"  
          - "elasticmapreduce:CreatePersistentAppUI"  
          - "elasticmapreduce:DescribePersistentAppUI"  
          - "elasticmapreduce:GetPersistentAppUIPresignedURL"  
          - "secretsmanager:CreateSecret"  
          - "secretsmanager:ListSecrets"
          - "emr-containers:DescribeVirtualCluster"
          - "emr-containers:ListVirtualClusters"
          - "emr-containers:DescribeManagedEndpoint"
          - "emr-containers:ListManagedEndpoints"
          - "emr-containers:CreateAccessTokenForManagedEndpoint"
          - "emr-containers:DescribeJobRun"
          - "emr-containers:ListJobRuns"
        - Sid: AllowIntermediateActions
          Effect: Allow
          Resource: "*"
          Action:
          - "servicecatalog:DescribeProduct"
          - "servicecatalog:DescribeProductView"
          - "servicecatalog:DescribeProvisioningParameters"
          - "servicecatalog:ProvisionProduct"
          - "servicecatalog:SearchProducts"
          - "servicecatalog:UpdateProvisionedProduct"
          - "servicecatalog:ListProvisioningArtifacts"
          - "servicecatalog:DescribeRecord"
          - "cloudformation:DescribeStackResources"
        - Sid: AllowAdvancedActions
          Effect: Allow
          Resource: "*"
          Action:
          - "elasticmapreduce:RunJobFlow"
        - Sid: PassRolePermission
          Effect: Allow
          Resource: 
          - !GetAtt EMRStudioServiceRole.Arn
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/EMR_DefaultRole
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/EMR_EC2_DefaultRole
          Action: "iam:PassRole"  
        - Sid: S3ListPermission
          Effect: Allow
          Resource: "arn:aws:s3:::*"
          Action:
          - "s3:ListAllMyBuckets"  
          - "s3:ListBucket"  
          - "s3:GetBucketLocation"
        - Sid: S3GetObjectPermission
          Effect: Allow
          Resource: 
          - !Sub 'arn:aws:s3:::<my-bucket>/*'
          - !Sub 'arn:aws:s3:::aws-logs-${AWS::AccountId}-${AWS::Region}/elasticmapreduce/*'
          Action:
          - "s3:GetObject"


  # Security Groups
  WorkspaceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Metadata: {Comment: 'Security group attached to workspace'}
    Properties:
      GroupName: WorkspaceSecurityGroup
      GroupDescription: Security group attached to workspace to communicate with cluster
      VpcId:
        Ref: VPC
      # needed for git
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"

  EngineSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Metadata: {Comment: 'Security group attached to cluster master instance'}
    Properties:
      GroupDescription: Security group attached to cluster master to communicate with workspace
      GroupName: EngineSecurityGroup
      VpcId:
        Ref: VPC

  EngineSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound traffic to EngineSecurityGroup ( from notebook to cluster for port 18888 )
      GroupId:
        Ref: EngineSecurityGroup
      SourceSecurityGroupId:
        Ref: WorkspaceSecurityGroup
      IpProtocol: tcp
      FromPort: 18888
      ToPort: 18888

  WorkspaceSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound traffic from WorkspaceSecurityGroup ( from notebook to cluster for port 18888 )
      GroupId:
        Ref: WorkspaceSecurityGroup
      DestinationSecurityGroupId:
        Ref: EngineSecurityGroup
      IpProtocol: tcp
      FromPort: 18888
      ToPort: 18888

Outputs:
  WorkspaceSecurityGroup:
    Value: !Ref WorkspaceSecurityGroup
  EngineSecurityGroup:
    Value: !Ref EngineSecurityGroup
  EMRStudioServiceRoleArn:
    Value: !GetAtt EMRStudioServiceRole.Arn
  EMRStudioUserRoleArn:
    Value: !GetAtt EMRStudioUserRole.Arn
  EMRStudioBasicUserPolicyArn:
    Value: !Ref EMRStudioBasicUserPolicy
  EMRStudioIntermediateUserPolicyArn:
    Value: !Ref EMRStudioIntermediateUserPolicy
  EMRStudioAdvancedUserPolicyArn:
    Value: !Ref EMRStudioAdvancedUserPolicy
